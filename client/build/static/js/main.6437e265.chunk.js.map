{"version":3,"sources":["utils/actions.js","utils/helpers.js","components/CartItem/index.js","utils/auth.js","utils/queries.js","utils/reducers.js","utils/store.js","components/Cart/index.js","pages/Home.js","pages/NoMatch.js","components/CategoryMenu/index.js","pages/Blueprints.js","pages/Classes.js","pages/Dashboard.js","utils/mutations.js","pages/Login.js","pages/MessageBoard.js","pages/Signup.js","components/Navigation/index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","CLEAR_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","CartItem","item","dispatch","useDispatch","className","src","image","alt","name","price","type","placeholder","value","purchaseQuantity","onChange","target","parseInt","role","aria-label","onClick","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","gql","QUERY_CATEGORIES","QUERY_CHECKOUT","initialState","products","cart","cartOpen","categories","currentCategory","reducer","state","action","product","newState","filter","length","map","createStore","stripePromise","loadStripe","Cart","getState","useSelector","useLazyQuery","getCheckout","data","toggleCart","useEffect","a","getCart","then","res","redirectToCheckout","sessionId","checkout","session","sum","forEach","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","NoMatch","CategoryMenu","useQuery","loading","categoryData","category","id","Blueprints","Classes","Dashboard","LOGIN","ADD_USER","Login","props","useState","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","to","onSubmit","htmlFor","MessageBoard","Signup","addUser","firstName","lastName","Navigation","href","logout","Footer","client","ApolloClient","operation","setContext","headers","authorization","uri","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAAaA,EAAkB,kBAElBC,EAAoB,oBACpBC,EAA0B,0BAE1BC,EAAc,cACdC,EAAuB,uBACvBC,EAAmB,mBACnBC,EAAa,aACbC,EAAuB,uBACvBC,EAAc,cCHlB,SAASC,EAAWC,EAAWC,EAAQC,GAC5C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAEIC,EAAIC,EAAIC,EAFNC,EAAUC,OAAOC,UAAUC,KAAK,oBAAqB,GAI3DH,EAAQI,gBAAkB,SAASC,GACjC,IAAMR,EAAKG,EAAQM,OACnBT,EAAGU,kBAAkB,WAAY,CAAEC,QAAS,QAC5CX,EAAGU,kBAAkB,aAAc,CAAEC,QAAS,QAC9CX,EAAGU,kBAAkB,OAAQ,CAAEC,QAAS,SAG1CR,EAAQS,QAAU,SAASJ,GACzBK,QAAQC,IAAI,uBAGdX,EAAQY,UAAY,SAASP,GAY3B,OAVAR,EAAKG,EAAQM,OAEbR,EAAKD,EAAGgB,YAAYtB,EAAW,aAE/BQ,EAAQD,EAAGgB,YAAYvB,GAEvBM,EAAGY,QAAU,SAASJ,GACpBK,QAAQC,IAAI,QAASN,IAGfb,GACN,IAAK,MACHO,EAAMgB,IAAItB,GACVE,EAAQF,GACR,MACF,IAAK,MACH,IAAMuB,EAAMjB,EAAMkB,SAClBD,EAAIJ,UAAY,WACdjB,EAAQqB,EAAIV,SAEd,MACF,IAAK,SACHP,EAAMmB,OAAOzB,EAAO0B,KACpB,MACF,QACET,QAAQC,IAAI,mBAIhBb,EAAGsB,WAAa,WACdvB,EAAGwB,aCnDb,IA4DeC,EA5DE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACVC,EAAWC,cA4BjB,OACI,sBAAKC,UAAU,WAAf,UACI,8BACI,qBACIC,IAAG,kBAAaJ,EAAKK,OACrBC,IAAI,OAGZ,gCACI,gCAAMN,EAAKO,KAAX,MAAoBP,EAAKQ,SACzB,gCACI,wCACA,uBACIC,KAAK,SACLC,YAAY,IACZC,MAAOX,EAAKY,iBACZC,SAlCH,SAAC/B,GACd,IAAM6B,EAAQ7B,EAAEgC,OAAOH,MACT,MAAVA,GACAV,EAAS,CACLQ,KAAM9C,EACNiC,IAAKI,EAAKJ,MAEd7B,EAAW,OAAQ,SAAT,eAAwBiC,MAElCC,EAAS,CACLQ,KAAM5C,EACN+B,IAAKI,EAAKJ,IACVgB,iBAAkBG,SAASJ,KAE/B5C,EAAW,OAAQ,MAAT,YAAC,eAAoBiC,GAArB,IAA2BY,iBAAkBG,SAASJ,UAsBxD,sBACIK,KAAK,MACLC,aAAW,QACXC,QAAS,kBA/CN,SAAAlB,GACnBC,EAAS,CACLQ,KAAM9C,EACNiC,IAAKI,EAAKJ,MAEd7B,EAAW,OAAQ,SAAT,eAAwBiC,IA0CHmB,CAAenB,IAHlC,0C,wBCZL,M,qGApCP,OAAOoB,YAAOC,KAAKC,c,iCAInB,IAAMC,EAAQF,KAAKC,WACnB,QAASC,IAAUF,KAAKG,eAAeD,K,qCAG5BA,GACX,IAEI,OADgBH,YAAOG,GACXE,IAAMC,KAAKC,MAAQ,IAGjC,MAAOC,GACL,OAAO,K,iCAKX,OAAOC,aAAaC,QAAQ,c,4BAG1BC,GACFF,aAAaG,QAAQ,WAAYD,GAEjCrD,OAAOuD,SAASC,OAAO,O,+BAIvBL,aAAaM,WAAW,YAExBzD,OAAOuD,SAASC,OAAO,S,8oEClCFE,IAAH,KAgBOA,IAAH,KAhBvB,IA+BMC,EAAmBD,IAAH,KAsChBE,GA7BaF,IAAH,KA6BOA,IAAH,M,GAQGA,IAAH,KAWHA,IAAH,KAeWA,IAAH,KAgBOA,IAAH,K,OC7G3BG,EAAe,CACjBC,SAAU,GACVC,KAAM,GACNC,UAAU,EACVC,WAAY,GACZC,gBAAiB,IAsFNC,EAnFQ,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACrD,OAAQA,EAAOtC,MACX,KAAKnD,EAED,OADA6B,QAAQC,IAAI2D,EAAOtC,MACZ,2BACAqC,GADP,IAEIN,SAAS,YAAKO,EAAOP,YAG7B,KAAKjF,EAED,OADA4B,QAAQC,IAAI2D,EAAOtC,MACZ,2BACAqC,GADP,IAEIH,WAAW,YAAKI,EAAOJ,cAG/B,KAAKnF,EAED,OADA2B,QAAQC,IAAI2D,EAAOtC,MACZ,2BACAqC,GADP,IAEIF,gBAAiBG,EAAOH,kBAGhC,KAAKnF,EAED,OADA0B,QAAQC,IAAI2D,EAAOtC,MACZ,2BACAqC,GADP,IAEIJ,UAAU,EACND,KAAK,GAAD,mBAAMK,EAAML,MAAZ,CAAkBM,EAAOC,YAGzC,KAAKtF,EAED,OADAyB,QAAQC,IAAI2D,EAAOtC,MACZ,2BACAqC,GADP,IAEIL,KAAK,GAAD,mBAAMK,EAAML,MAAZ,YAAqBM,EAAOP,aAGxC,KAAK7E,EACDwB,QAAQC,IAAI2D,EAAOtC,MACnB,IAAIwC,EAAWH,EAAML,KAAKS,QAAO,SAACF,GAC9B,OAAOA,EAAQpD,MAAQmD,EAAOnD,OAGlC,OAAO,2BACAkD,GADP,IAEIJ,SAAUO,EAASE,OAAS,EACxBV,KAAMQ,IAGlB,KAAKpF,EAED,OADAsB,QAAQC,IAAI2D,EAAOtC,MACZ,2BACAqC,GADP,IAEIJ,UAAU,EACND,KAAMK,EAAML,KAAKW,KAAI,SAACJ,GAIlB,OAHID,EAAOnD,MAAQoD,EAAQpD,MACvBoD,EAAQpC,iBAAmBmC,EAAOnC,kBAE/BoC,OAIvB,KAAKpF,EAED,OADAuB,QAAQC,IAAI2D,EAAOtC,MACZ,2BACAqC,GADP,IAEIJ,UAAU,EACND,KAAM,KAGlB,KAAK3E,EAED,OADAqB,QAAQC,IAAI2D,EAAOtC,MACZ,2BACAqC,GADP,IAEIJ,UAAWI,EAAMJ,WAGzB,QACI,OAAOI,IChGJO,cAAYR,GCUrBS,G,MAAgBC,YAAW,qCAqGlBC,GAnGF,WACT,IAAMvD,EAAWC,cAEX4C,EAAQtE,EAAMiF,WACpBC,aAAY,SAAAZ,GAAK,OAAIA,KAJN,MAMiBa,uBAAarB,GAN9B,mBAMRsB,EANQ,KAMOC,EANP,KAMOA,KAqBtB,SAASC,IACL7D,EAAS,CAAEQ,KAAM3C,IAWrB,GA/BAiG,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACuBjG,EAAW,OAAQ,OAD1C,OACU0E,EADV,OAEIxC,EAAS,CAAEQ,KAAM/C,EAAsB8E,SAAS,YAAKC,KAFzD,4CADY,sBAMPK,EAAML,KAAKU,QANH,WAAD,wBAORc,KAEL,CAACnB,EAAML,KAAKU,OAAQlD,IAEvB8D,qBAAU,WACFF,GACAP,EAAcY,MAAK,SAACC,GAChBA,EAAIC,mBAAmB,CAAEC,UAAWR,EAAKS,SAASC,eAG3D,CAACV,EAAM5D,KAcL6C,EAAMJ,SACP,OACI,qBAAKvC,UAAU,cAAce,QAAS4C,EAAtC,SACI,sBAAM9C,KAAK,MAAMC,aAAW,QAA5B,4BAqBZ,OACI,sBAAKd,UAAU,OAAf,UACI,qBAAKA,UAAU,QAAQe,QAAS4C,EAAhC,qBAEA,+CACChB,EAAML,KAAKU,OACR,gCACKL,EAAML,KAAKW,KAAI,SAAApD,GAAI,OAChB,cAAC,EAAD,CAAyBA,KAAMA,GAAhBA,EAAKJ,QAGxB,sBAAKO,UAAU,yBAAf,UACI,8CA5CpB,WACI,IAAIqE,EAAM,EAIV,OAHA1B,EAAML,KAAKgC,SAAQ,SAAAzE,GACfwE,GAAOxE,EAAKQ,MAAQR,EAAKY,oBAEtB4D,EAAIE,QAAQ,GAuCcC,MAGbC,EAAKC,WACD,wBAAQ3D,QA9BpC,WACI,IAAM4D,EAAa,GAEnBhC,EAAML,KAAKgC,SAAQ,SAACzE,GAChB,IAAK,IAAI+E,EAAI,EAAGA,EAAI/E,EAAKY,iBAAkBmE,IACvCD,EAAWE,KAAKhF,EAAKJ,QAI7BgE,EAAY,CACRqB,UAAW,CAAEzC,SAAUsC,MAoBH,sBAII,+DAKpB,+BACI,sBAAM9D,KAAK,MAAMC,aAAW,UAA5B,0BADJ,sDCvFDiE,GAXF,WACT,OACI,qBAAK/E,UAAU,YAAf,SAEI,yCCGGgF,GARC,WACZ,OACI,8BACI,uDCmDGC,OAnDf,WACE,IAAMnF,EAAWC,cAGTyC,EAFMe,aAAY,SAAAZ,GAAK,OAAIA,KAE3BH,WAJc,EAMkB0C,mBAAShD,GAAzCiD,EANc,EAMdA,QAAeC,EAND,EAML1B,KA4BjB,OA1BAE,qBAAU,WACJwB,GACFtF,EAAS,CACPQ,KAAMlD,EACNoF,WAAY4C,EAAa5C,aAE3B4C,EAAa5C,WAAW8B,SAAQ,SAAAe,GAC9BzH,EAAW,aAAc,MAAOyH,OAExBF,GACVvH,EAAW,aAAc,OAAOmG,MAAK,SAAAvB,GACnC1C,EAAS,CACPQ,KAAMlD,EACNoF,WAAYA,SAIjB,CAAC4C,EAAcD,EAASrF,IAUzB,gCACE,oDACC0C,EAAWS,KAAI,SAAApD,GAAI,OAClB,wBAEEkB,QAAS,WAbG,IAAAuE,IAcEzF,EAAKJ,IAbzBK,EAAS,CACPQ,KAAMjD,EACNoF,gBAAiB6C,KAQf,SAMGzF,EAAKO,MALDP,EAAKJ,YC9BL8F,GAXI,WACf,OACI,gCACI,iDACA,cAAC,GAAD,IAEA,cAAC,GAAD,QCKGC,GAXC,WACZ,OACI,gCACI,8CACA,cAAC,GAAD,IAEA,cAAC,GAAD,QCDGC,GARG,WACd,OACI,8BACI,8C,ojDCHL,IAAMC,GAAQzD,IAAH,MAWL0D,GAAW1D,IAAH,MC+DN2D,IDpDU3D,IAAH,MA0BKA,IAAH,MC5CV,SAAC4D,GAAW,IAAD,EACaC,mBAAS,CAAEC,MAAO,GAAIC,SAAU,KAD7C,mBACdC,EADc,KACHC,EADG,OAEMC,sBAAYT,IAFlB,mBAEdU,EAFc,KAELC,EAFK,KAELA,MAEVC,EAAgB,uCAAG,WAAMC,GAAN,iBAAA1C,EAAA,6DACrB0C,EAAMC,iBADe,kBAGcJ,EAAM,CACjCtB,UAAW,CAAEiB,MAAOE,EAAUF,MAAOC,SAAUC,EAAUD,YAJ5C,OAGXS,EAHW,OAMXrF,EAAQqF,EAAiB/C,KAAK0C,MAAMhF,MAC1CqD,EAAK2B,MAAMhF,GAPM,gDAUjBpC,QAAQC,IAAR,MAViB,yDAAH,sDAchByH,EAAe,SAAAH,GAAU,IAAD,EACFA,EAAM5F,OAAtBP,EADkB,EAClBA,KAAMI,EADY,EACZA,MACd0F,EAAa,2BACND,GADK,mBAEP7F,EAAOI,MAIhB,OACI,gCACI,cAAC,IAAD,CAAMmG,GAAG,UAAT,4BAIA,uCAEA,uBAAMC,SAAUN,EAAhB,UACI,gCACI,uBAAOO,QAAQ,QAAf,6BACA,uBACItG,YAAY,mBACZH,KAAK,QACLE,KAAK,QACLgF,GAAG,QACH5E,SAAUgG,OAGlB,gCACI,uBAAOG,QAAQ,WAAf,wBACA,uBACItG,YAAY,SACZH,KAAK,WACLE,KAAK,WACLgF,GAAG,WACH5E,SAAUgG,OAIVL,EAAQ,8BACJ,8GACK,KAEjB,8BACI,wBAAQ/F,KAAK,SAAb,8BCzDLwG,GARM,WACjB,OACI,8BACI,kDCuFGC,GAtFA,SAAClB,GAAW,IAAD,EACYC,mBAAS,CAAEC,MAAO,GAAIC,SAAU,KAD5C,mBACfC,EADe,KACJC,EADI,OAEOC,sBAAYR,IAFnB,mBAEfqB,EAFe,KAEJX,EAFI,KAEJA,MAEZC,EAAgB,uCAAG,WAAMC,GAAN,iBAAA1C,EAAA,6DACrB0C,EAAMC,iBADe,SAEUQ,EAAQ,CACnClC,UAAW,CACPiB,MAAOE,EAAUF,MAAOC,SAAUC,EAAUD,SAC5CiB,UAAWhB,EAAUgB,UAAWC,SAAUjB,EAAUiB,YALvC,OAEfT,EAFe,OASfrF,EAAQqF,EAAiB/C,KAAKsD,QAAQ5F,MAC5CqD,EAAK2B,MAAMhF,GAVU,2CAAH,sDAahBsF,EAAe,SAAAH,GAAU,IAAD,EACFA,EAAM5F,OAAtBP,EADkB,EAClBA,KAAMI,EADY,EACZA,MAEd0F,EAAa,2BACRD,GADO,mBAET7F,EAAOI,MAId,OACI,gCACI,cAAC,IAAD,CAAMmG,GAAG,SAAT,2BAIA,wCAEA,uBAAMC,SAAUN,EAAhB,UACI,gCACI,uBAAOO,QAAQ,YAAf,0BACA,uBACItG,YAAY,OACZH,KAAK,YACLE,KAAK,YACLgF,GAAG,YACH5E,SAAUgG,OAGlB,gCACI,uBAAOG,QAAQ,WAAf,yBACA,uBACItG,YAAY,MACZH,KAAK,WACLE,KAAK,WACLgF,GAAG,WACH5E,SAAUgG,OAGlB,gCACI,uBAAOG,QAAQ,QAAf,qBACA,uBACItG,YAAY,mBACZH,KAAK,QACLE,KAAK,QACLgF,GAAG,QACH5E,SAAUgG,OAGlB,gCACI,uBAAOG,QAAQ,WAAf,wBACA,uBACItG,YAAY,SACZH,KAAK,WACLE,KAAK,WACLgF,GAAG,WACH5E,SAAUgG,OAGlB,8BACI,wBAAQpG,KAAK,SAAb,yBAKP+F,GAAS,uECPPc,OA5Ef,WA6DE,OACE,yBAAQnH,UAAU,gBAAlB,UACE,6BACE,cAAC,IAAD,CAAM2G,GAAG,IAAT,kCAKF,8BAlEElC,EAAKC,WAEL,qBAAI1E,UAAU,WAAd,UACE,oBAAIA,UAAU,OAAd,SACE,cAAC,IAAD,CAAM2G,GAAG,cAAT,0BAIF,oBAAI3G,UAAU,OAAd,SACE,cAAC,IAAD,CAAM2G,GAAG,WAAT,uBAIF,oBAAI3G,UAAU,OAAd,SACE,cAAC,IAAD,CAAM2G,GAAG,aAAT,yBAIF,oBAAI3G,UAAU,OAAd,SACE,cAAC,IAAD,CAAM2G,GAAG,gBAAT,6BAIF,oBAAI3G,UAAU,OAAd,SACE,mBAAGoH,KAAK,IAAIrG,QAAS,kBAAM0D,EAAK4C,UAAhC,yBAQJ,qBAAIrH,UAAU,WAAd,UACE,oBAAIA,UAAU,OAAd,SACE,cAAC,IAAD,CAAM2G,GAAG,cAAT,0BAIF,oBAAI3G,UAAU,OAAd,SACE,cAAC,IAAD,CAAM2G,GAAG,WAAT,uBAIF,oBAAI3G,UAAU,OAAd,SACE,cAAC,IAAD,CAAM2G,GAAG,UAAT,sBAIF,oBAAI3G,UAAU,OAAd,SACE,cAAC,IAAD,CAAM2G,GAAG,SAAT,8BC9CGW,GARA,WACX,OACI,wBAAQtH,UAAU,iCAAlB,SACI,qBAAKA,UAAU,YAAf,oDCiBNuH,GAAS,IAAIC,IAAa,CAC9BlJ,QAAS,SAACmJ,GACR,IAAMrG,EAAQM,aAAaC,QAAQ,YACnC8F,EAAUC,WAAW,CACnBC,QAAS,CACPC,cAAexG,EAAK,iBAAaA,GAAU,OAIjDyG,IAAK,aAgCQC,OA7Bf,WACE,OACE,cAAC,iBAAD,CAAgBP,OAAQA,GAAxB,SACE,cAAC,IAAD,UACE,sBAAKvH,UAAU,4CAAf,UACA,eAAC,IAAD,CAAU3B,MAAOA,EAAjB,UACE,cAAC,GAAD,IACA,qBAAK2B,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+H,OAAK,EAACC,KAAK,IAAIC,UAAWlD,KACjC,cAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,cAAcC,UAAW1C,KAC3C,cAAC,IAAD,CAAOwC,OAAK,EAACC,KAAK,WAAWC,UAAWzC,KAGxC,cAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,aAAaC,UAAWxC,KAC1C,cAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,SAASC,UAAWrC,KACtC,cAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,UAAUC,UAAWlB,KACvC,cAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,gBAAgBC,UAAWnB,KAC7C,cAAC,IAAD,CAAOmB,UAAWjD,aAItB,cAAC,GAAD,YC5CKkD,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrE,MAAK,YAAkD,IAA/CsE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.6437e265.chunk.js","sourcesContent":["export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\n\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\nexport const TOGGLE_CART = \"TOGGLE_CART\";\r\n\r\n","export function pluralize(name, count) {\r\n    if (count === 1) {\r\n      return name;\r\n    }\r\n    return name + 's';\r\n  }\r\n  \r\n  export function idbPromise(storeName, method, object) {\r\n    return new Promise((resolve, reject) => {\r\n      const request = window.indexedDB.open('The-Makers-Corner', 1);\r\n      \r\n      let db, tx, store;\r\n      \r\n      request.onupgradeneeded = function(e) {\r\n        const db = request.result;\r\n        db.createObjectStore('products', { keyPath: '_id' });\r\n        db.createObjectStore('categories', { keyPath: '_id' });\r\n        db.createObjectStore('cart', { keyPath: '_id' });\r\n      };\r\n  \r\n      request.onerror = function(e) {\r\n        console.log('There was an error');\r\n      };\r\n  \r\n      request.onsuccess = function(e) {\r\n      \r\n        db = request.result;\r\n        \r\n        tx = db.transaction(storeName, 'readwrite');\r\n        \r\n        store = tx.objectStore(storeName);\r\n  \r\n        db.onerror = function(e) {\r\n          console.log('error', e);\r\n        };\r\n  \r\n        switch (method) {\r\n          case 'put':\r\n            store.put(object);\r\n            resolve(object);\r\n            break;\r\n          case 'get':\r\n            const all = store.getAll();\r\n            all.onsuccess = function() {\r\n              resolve(all.result);\r\n            };\r\n            break;\r\n          case 'delete':\r\n            store.delete(object._id);\r\n            break;\r\n          default:\r\n            console.log('No valid method');\r\n            break;\r\n        }\r\n  \r\n        tx.oncomplete = function() {\r\n          db.close();\r\n        };\r\n      };\r\n    });\r\n  }\r\n  ","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nconst CartItem = ({ item }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const removeFromCart = item => {\r\n        dispatch({\r\n            type: REMOVE_FROM_CART,\r\n            _id: item._id\r\n        });\r\n        idbPromise('cart', 'delete', { ...item });\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const value = e.target.value;\r\n        if (value === '0') {\r\n            dispatch({\r\n                type: REMOVE_FROM_CART,\r\n                _id: item._id\r\n            });\r\n            idbPromise('cart', 'delete', { ...item });\r\n        } else {\r\n            dispatch({\r\n                type: UPDATE_CART_QUANTITY,\r\n                _id: item._id,\r\n                purchaseQuantity: parseInt(value)\r\n            });\r\n            idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex-row\">\r\n            <div>\r\n                <img\r\n                    src={`/images/${item.image}`}\r\n                    alt=''\r\n                />\r\n            </div>\r\n            <div>\r\n                <div>{item.name}, ${item.price}</div>\r\n                <div>\r\n                    <span>Qty:</span>\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"1\"\r\n                        value={item.purchaseQuantity}\r\n                        onChange={onChange}\r\n                    />\r\n                    <span\r\n                        role=\"img\"\r\n                        aria-label=\"trash\"\r\n                        onClick={() => removeFromCart(item)}\r\n                    >\r\n                        🗑️\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartItem;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    getProfile() {\r\n        return decode(this.getToken());\r\n    }\r\n\r\n    loggedIn() {\r\n        const token = this.getToken();\r\n        return !!token && !this.isTokenExpired(token);\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.now() / 1000) {\r\n                return true;\r\n            } else return false;\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('id_token');\r\n    }\r\n\r\n    login(idToken) {\r\n        localStorage.setItem('id_token', idToken);\r\n\r\n        window.location.assign('/');\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('id_token');\r\n\r\n        window.location.assign('/');\r\n    }\r\n}\r\n\r\nexport default new AuthService();","import gql from 'graphql-tag';\r\n\r\nexport const QUERY_COURSES = gql`\r\n  query getCourse($category: ID) {\r\n    courses(category: $category) {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      image\r\n      category {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ALL_COURSES = gql`\r\n  {\r\n    courses {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CATEGORIES = gql`\r\n{\r\n  categories {\r\n    _id\r\n    name\r\n  }\r\n}\r\n`;\r\n\r\nexport const QUERY_USER = gql`\r\n{\r\n  user {\r\n    firstName\r\n    lastName\r\n    orders {\r\n      _id\r\n      purchaseDate\r\n      blueprints {\r\n        _id\r\n        name\r\n        description\r\n        price\r\n        quantity\r\n        image\r\n      }\r\n      courses {\r\n        _id\r\n        name\r\n        description\r\n        price\r\n        quantity\r\n        image\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const QUERY_CHECKOUT = gql`\r\n  query getCheckout($products: [ID]!) {\r\n    checkout(products: $products) {\r\n      session\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_COMMENTS = gql`\r\n  query comments($username: String) {\r\n    comments(username: $username) {\r\n      _id\r\n      commentText\r\n      createdAt\r\n      username\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ME = gql`\r\n  {\r\n    me {\r\n      _id\r\n      username\r\n      email\r\n      comments {\r\n        _id\r\n        commentText\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_BLUEPRINTS = gql`\r\n  query getBlueprints($category: ID) {\r\n    blueprints(category: $category) {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      image\r\n      category {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ALL_BLUEPRINTS = gql`\r\n  {\r\n    blueprints {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import {\r\n    UPDATE_PRODUCTS,\r\n    UPDATE_CATEGORIES,\r\n    UPDATE_CURRENT_CATEGORY,\r\n    ADD_TO_CART,\r\n    ADD_MULTIPLE_TO_CART,\r\n    REMOVE_FROM_CART,\r\n    UPDATE_CART_QUANTITY,\r\n    CLEAR_CART,\r\n    TOGGLE_CART,\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n    products: [],\r\n    cart: [],\r\n    cartOpen: false,\r\n    categories: [],\r\n    currentCategory: \"\",\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_PRODUCTS:\r\n            console.log(action.type);\r\n            return {\r\n                ...state,\r\n                products: [...action.products],\r\n            };\r\n\r\n        case UPDATE_CATEGORIES:\r\n            console.log(action.type);\r\n            return {\r\n                ...state,\r\n                categories: [...action.categories],\r\n            };\r\n\r\n        case UPDATE_CURRENT_CATEGORY:\r\n            console.log(action.type);\r\n            return {\r\n                ...state,\r\n                currentCategory: action.currentCategory,\r\n            };\r\n\r\n        case ADD_TO_CART:\r\n            console.log(action.type);\r\n            return {\r\n                ...state,\r\n                cartOpen: true,\r\n                    cart: [...state.cart, action.product],\r\n            };\r\n\r\n        case ADD_MULTIPLE_TO_CART:\r\n            console.log(action.type);\r\n            return {\r\n                ...state,\r\n                cart: [...state.cart, ...action.products],\r\n            };\r\n\r\n        case REMOVE_FROM_CART:\r\n            console.log(action.type);\r\n            let newState = state.cart.filter((product) => {\r\n                return product._id !== action._id;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                cartOpen: newState.length > 0,\r\n                    cart: newState,\r\n            };\r\n\r\n        case UPDATE_CART_QUANTITY:\r\n            console.log(action.type);\r\n            return {\r\n                ...state,\r\n                cartOpen: true,\r\n                    cart: state.cart.map((product) => {\r\n                        if (action._id === product._id) {\r\n                            product.purchaseQuantity = action.purchaseQuantity;\r\n                        }\r\n                        return product;\r\n                    }),\r\n            };\r\n\r\n        case CLEAR_CART:\r\n            console.log(action.type);\r\n            return {\r\n                ...state,\r\n                cartOpen: false,\r\n                    cart: [],\r\n            };\r\n\r\n        case TOGGLE_CART:\r\n            console.log(action.type);\r\n            return {\r\n                ...state,\r\n                cartOpen: !state.cartOpen,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\nexport default createStore(reducer);","import React, { useEffect } from 'react';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\n\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport store from '../../utils/store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n    const dispatch = useDispatch();\n    \n    const state = store.getState();\n    useSelector(state => state);\n\n    const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n    useEffect(() => {\n        async function getCart() {\n            const cart = await idbPromise('cart', 'get');\n            dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n        };\n\n        if (!state.cart.length) {\n            getCart();\n        }\n    }, [state.cart.length, dispatch]);\n\n    useEffect(() => {\n        if (data) {\n            stripePromise.then((res) => {\n                res.redirectToCheckout({ sessionId: data.checkout.session });\n            });\n        }\n    }, [data, dispatch]);\n\n    function toggleCart() {\n        dispatch({ type: TOGGLE_CART });\n    }\n\n    function calculateTotal() {\n        let sum = 0;\n        state.cart.forEach(item => {\n            sum += item.price * item.purchaseQuantity;\n        });\n        return sum.toFixed(2);\n    }\n\n    if (!state.cartOpen) {\n        return (\n            <div className=\"cart-closed\" onClick={toggleCart}>\n                <span role=\"img\" aria-label=\"trash\">\n                    🛒\n                </span>\n            </div>\n        );\n    }\n\n    function submitCheckout() {\n        const productIds = [];\n\n        state.cart.forEach((item) => {\n            for (let i = 0; i < item.purchaseQuantity; i++) {\n                productIds.push(item._id);\n            }\n        });\n\n        getCheckout({\n            variables: { products: productIds }\n        });\n    }\n\n    return (\n        <div className=\"cart\">\n            <div className=\"close\" onClick={toggleCart}>\n                [close]</div>\n            <h2>Shopping Cart</h2>\n            {state.cart.length ? (\n                <div>\n                    {state.cart.map(item => (\n                        <CartItem key={item._id} item={item} />\n                    ))}\n\n                    <div className=\"flex-row space-between\">\n                        <strong>Total: ${calculateTotal()}</strong>\n\n                        {\n                            Auth.loggedIn() ? (\n                                <button onClick={submitCheckout}>\n                                    Checkout\n                                </button>\n                            ) : (\n                                    <span>(log in to check out)</span>\n                            )}\n                    </div>\n                </div>\n            ) : (\n                <h3>\n                    <span role=\"img\" aria-label=\"shocked\">\n                        😱\n                    </span>\n                    You haven't added anything to your cart yet!\n                </h3>\n            )}\n        </div>\n    );\n};\n\nexport default Cart;\n","import React from 'react';\n// IMPORT COMPONENTS\nimport Cart from '../components/Cart';\n// - ProductList ?? \n\nconst Home = () => {\n    return (\n        <div className=\"container\">\n            {/* <Cart/> */}\n            <h2>Home</h2>\n            {/* INSERT COMPONENTS */}\n            {/* -- INSERT PRODUCTLIST... ONLY TOP 5 */}\n        </div>\n    );\n};\n\nexport default Home;","import React from 'react';\n// IMPORT COMPONENTS\n// - Jumbotron\n\nconst NoMatch = () => {\n    return (\n        <div>\n            <h2>404 Page Not Found</h2>\n        </div>\n    );\n};\n\nexport default NoMatch;","import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\r\nimport { QUERY_CATEGORIES } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\nfunction CategoryMenu() {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector(state => state);\r\n\r\n  const { categories } = state;\r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories\r\n      });\r\n      categoryData.categories.forEach(category => {\r\n        idbPromise('categories', 'put', category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('categories', 'get').then(categories => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  const handleClick = id => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Choose a Category:</h2>\r\n      {categories.map(item => (\r\n        <button\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n","import React from 'react';\nimport CategoryMenu from '../components/CategoryMenu';\n// IMPORT BLUEPRINTS COMPONENT\nimport Cart from '../components/Cart';\n\nconst Blueprints = () => {\n    return (\n        <div>\n            <h2>Blueprints Page</h2>\n            <CategoryMenu />\n            {/* BLUE PRINT COMPONENT */}\n            <Cart />\n        </div>\n    );\n};\n\nexport default Blueprints;","import React from 'react';\nimport CategoryMenu from '../components/CategoryMenu';\n// IMPORT CLASSES COMPONENT\nimport Cart from '../components/Cart';\n\nconst Classes = () => {\n    return (\n        <div>\n            <h2>Classes Page</h2>\n            <CategoryMenu />\n            {/* CLASSES COMPONENT */}\n            <Cart />\n        </div>\n    );\n};\n\nexport default Classes;","import React from 'react';\n\nconst Dashboard = () => {\n    return (\n        <div>\n            <h2>Dashboard</h2>\n        </div>\n    );\n};\n\nexport default Dashboard;","import gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n    mutation login($email: String!, $password: String!) {\n        login(email: $email, password: $password) {\n            token\n            user {\n                _id\n            }\n        }\n    }\n`;\n\nexport const ADD_USER = gql`\n    mutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\n        addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n            token\n            user {\n                _id\n            }\n        }\n    }\n`;\n\nexport const ADD_ORDER = gql`\n    mutation addOrder($classes:[ID]!, $blueprints: [ID]!) {\n        addOrder(classes: $classes, blueprints: $blueprints) {\n            purchaseDate\n            classes {\n                _id\n                name\n                description\n                price\n                category {\n                    name\n                }\n            }\n            blueprints {\n                _id\n                name\n                description\n                price\n                category {\n                    name\n                }\n            }\n        }\n    }\n`;\n\nexport const ADD_COMMENT = gql`\n    mutation addComment($commentText: String!) {\n        addComment(commentText: $commentText) {\n            _id\n            commentText\n            createdAt\n            username\n        }\n    }\n`;\n\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n    const [formState, setFormState] = useState({ email: '', password: '' });\n    const [login, { error }] = useMutation(LOGIN);\n\n    const handleFormSubmit = async event => {\n        event.preventDefault();\n        try {\n            const mutationResponse = await login({\n                variables: { email: formState.email, password: formState.password}\n            });\n            const token = mutationResponse.data.login.token;\n            Auth.login(token);\n        }\n        catch (e) {\n            console.log(e)\n        }\n    };\n\n    const handleChange = event => {\n        const { name, value } = event.target; \n        setFormState({\n            ...formState,\n            [name]: value\n        });\n    };\n\n    return (\n        <div>\n            <Link to='/signup'>\n                Signup instead\n            </Link>\n\n            <h2>Login</h2>\n\n            <form onSubmit={handleFormSubmit}>\n                <div>\n                    <label htmlFor=\"email\">Email address: </label>\n                    <input\n                        placeholder=\"johndoe@test.com\"\n                        name=\"email\"\n                        type=\"email\"\n                        id=\"email\"\n                        onChange={handleChange}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password: </label>\n                    <input\n                        placeholder=\"******\"\n                        name=\"password\"\n                        type=\"password\"\n                        id=\"password\"\n                        onChange={handleChange}\n                    />\n                </div>\n                    {\n                        error ? <div>\n                            <p> Oops. Looks like the credentials provided are incorrect. Please try again!</p>\n                        </div> : null\n                    }\n                <div>\n                    <button type='submit'>\n                        Submit\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;","import React from 'react';\n\nconst MessageBoard = () => {\n    return (\n        <div>\n            <h2>Message Board</h2>\n        </div>\n    );\n};\n\nexport default MessageBoard;","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_USER } from '../utils/mutations';\nimport { Link } from 'react-router-dom';\nimport Auth from '../utils/auth';\n\nconst Signup = (props) => {\n    const [formState, setFormState] = useState({ email: '', password: '' });\n    const [addUser, { error }] = useMutation(ADD_USER);\n\n    const handleFormSubmit = async event => {\n        event.preventDefault();\n        const mutationResponse = await addUser({\n            variables: {\n                email: formState.email, password: formState.password,\n                firstName: formState.firstName, lastName: formState.lastName\n            }\n        });\n\n        const token = mutationResponse.data.addUser.token;\n        Auth.login(token);\n    };\n\n    const handleChange = event => {\n        const { name, value } = event.target;\n    \n        setFormState({\n          ...formState,\n          [name]: value\n        });\n    };\n    \n    return (\n        <div>\n            <Link to='/login'>\n                Login instead\n            </Link>\n\n            <h2>Signup</h2>\n\n            <form onSubmit={handleFormSubmit}>\n                <div>\n                    <label htmlFor=\"firstName\">First Name: </label>\n                    <input \n                        placeholder=\"John\"\n                        name=\"firstName\"\n                        type=\"firstName\"\n                        id=\"firstName\"\n                        onChange={handleChange}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"lastName\">Last Name: </label>\n                    <input\n                        placeholder=\"Doe\"\n                        name=\"lastName\"\n                        type=\"lastName\"\n                        id=\"lastName\"\n                        onChange={handleChange}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"email\">Email: </label>\n                    <input\n                        placeholder=\"johndoe@test.com\"\n                        name=\"email\"\n                        type=\"email\"\n                        id=\"email\"\n                        onChange={handleChange}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password: </label>\n                    <input\n                        placeholder=\"******\"\n                        name=\"password\"\n                        type=\"password\"\n                        id=\"password\"\n                        onChange={handleChange}\n                    />\n                </div>\n                <div>\n                    <button type=\"submit\">\n                        Signup\n                    </button>\n                </div>\n            </form>\n            {error && <div>Signup failed, please try again!</div>}\n        </div>\n    );\n};\n\nexport default Signup;","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navigation() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/blueprints\">\n              Blueprints\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/classes\">\n              Classes\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/blueprints\">\n              Blueprints\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/classes\">\n              Classes\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          The Maker's Corner\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <footer className=\"w-100 mt-auto bg-secondary p-4\">\n            <div className=\"container\">&copy;2020 by John, Keegan, Ali, Jess</div>\n        </footer>\n    );\n};\n\nexport default Footer;","import React from 'react';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport NoMatch from './pages/NoMatch';\nimport Blueprints from './pages/Blueprints';\nimport Classes from './pages/Classes';\nimport Dashboard from './pages/Dashboard';\n// import Detail from './pages/Detail';\n// - Check to see if Blueprints & classes stay separate or if they turn into products??\nimport Login from './pages/Login';\nimport MessageBoard from './pages/MessageBoard';\nimport Signup from './pages/Signup';\n\n// IMPORT COMPONENTS\nimport Navigation from './components/Navigation';\nimport Footer from './components/Footer';\nimport { Provider } from 'react-redux';\nimport store from './utils/store';\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem('id_token')\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    })\n  },\n  uri: '/graphql',\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n        <Provider store={store}>\n          <Navigation/>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Home}/>\n              <Route exact path=\"/blueprints\" component={Blueprints}/>\n              <Route exact path=\"/classes\" component={Classes}/>\n              {/* OR combine blueprints and classes into products.... '/products' */}\n              {/* ... Detail page would then be '/products:id */}\n              <Route exact path=\"/dashboard\" component={Dashboard}/>\n              <Route exact path=\"/login\" component={Login}/>\n              <Route exact path=\"/signup\" component={Signup}/>\n              <Route exact path=\"/messageboard\" component={MessageBoard}/>\n              <Route component={NoMatch}/>\n            </Switch>\n          </div>\n          </Provider>\n          <Footer/>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}